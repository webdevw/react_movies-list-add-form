{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","showError","showErrorImg","required","onChange","useState","Math","random","toString","slice","id","touched","setTouched","hasError","showErrorMessage","showErrorImgMessage","htmlFor","classNames","type","placeholder","event","onBlur","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImdbId","setImgUrl","setImdbUrl","setShowError","setShowErrorImg","setMovieField","target","nameField","pattern","length","match","customValidation","fieldName","currentField","activeButton","onSubmit","preventDefault","counter","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eef2b967.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  showError?: boolean,\n  showErrorImg?: boolean,\n  required?: boolean,\n  onChange?: (newValue: React.ChangeEvent<HTMLInputElement>) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  showError,\n  showErrorImg,\n  required = false,\n  onChange = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  // const hasError = touched && required && !value;\n  const hasError = touched && required && !value;\n  const showErrorMessage = !hasError && touched && showError;\n  // const showErrorMessage = touched && showError;\n  const showErrorImgMessage = !hasError && touched && showErrorImg;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          name={name}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          // onChange={event => onChange(event.target.value)}\n          onChange={event => onChange(event)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n      { showErrorMessage && (\n        <p className=\"help is-info\">{`${label} must be correct`}</p>\n      )}\n      { showErrorImgMessage && (\n        <p className=\"help is-info\">{`${label} must be correct`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [showError, setShowError] = useState(false);\n  const [showErrorImg, setShowErrorImg] = useState(false);\n\n  const customValidation = (value: string, nameField: string) => {\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n    switch (nameField) {\n      case 'imdbUrl':\n        if (value.length) {\n          if (!value.match(pattern)) {\n            setShowError(true);\n          } else {\n            setShowError(false);\n          }\n        }\n\n        break;\n\n      case 'imgUrl':\n        if (value.length) {\n          if (!value.match(pattern)) {\n            setShowErrorImg(true);\n          } else {\n            setShowErrorImg(false);\n          }\n        }\n\n        break;\n      default:\n        break;\n    }\n  };\n\n  const currentField = (fieldName: string, value: string) => {\n    switch (fieldName) {\n      case 'title':\n        setTitle(value);\n        break;\n      case 'description':\n        setDescription(value);\n        break;\n      case 'imdbId':\n        setImdbId(value);\n        break;\n      case 'imdbUrl':\n        setImdbUrl(value);\n        break;\n      case 'imgUrl':\n        setImgUrl(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const setMovieField = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const { value, name } = event.target;\n\n    customValidation(value, name);\n    currentField(name, value);\n  };\n\n  const clearingForm = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImgUrl('');\n    setImdbId('');\n    setImdbUrl('');\n    setCount(counter => (counter + 1));\n  };\n\n  const activeButton = !(\n    !title || !imdbId || !imdbUrl || !imgUrl || showError || showErrorImg\n  );\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (activeButton) {\n      onAdd({\n        title,\n        description,\n        imdbId,\n        imdbUrl,\n        imgUrl,\n      });\n      clearingForm();\n    }\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setMovieField}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setMovieField}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setMovieField}\n        showErrorImg={showErrorImg}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setMovieField}\n        showError={showError}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setMovieField}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            disabled={!activeButton}\n            className=\"button is-link\"\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n  const addMovie = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onAdd={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}